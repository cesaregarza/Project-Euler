/**
 * PROBLEM 2
 * 
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
 * By starting with 1 and 2, the first 10 terms will be:
 * 
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
 * find the sum of the even-valued terms.
 */

 //import {BigNumber} from 'bignumber.js';

 function solution(n){

    let a = [0, 2];
    let sum = 0;

    while (a[1] <= n){
        sum += a[1];
        [a[0],a[1]] = [a[1], 4 * a[1] + a[0]];
    }

    return sum;
 }

 let q = 4000000;

let times = [];
let solutions = [];
for (let i = 0; i < 5; i++){
    let hrStart = process.hrtime();
    let g = solution(q);
    let hrEnd = process.hrtime(hrStart);
    times.push(hrEnd);
    solutions.push(g);
}
let tot = [0, 0];
for (let i in times){
    tot[0] += times[i][0];
    tot[1] += times[i][1];
}
tot[0] /= 5;
tot[1] /= 5;
let g = solutions[0];

console.log(`Answer: ${g} Execution Time: ${tot[0]}s, ${tot[1]/1000000}ms`);

 /**
  *     SUBMITTED ON 2018/11/13
  *     CORRECT
  *     VALUE: 4613732
  *     RUNTIME: 0.10051ms
  */