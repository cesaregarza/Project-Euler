/**
 *  PROBLEM 29
 *  Consider all integer combinations of a ** b for 2 ≤ a ≤ 5 and 2 ≤ b ≤ 5:
 * 
 *  2 ** 2 = 4, 2 ** 3 = 8, 2 ** 4 = 16, 2 ** 5 = 32
 *  3 ** 2 = 9, 3 ** 3 = 27, 3 ** 4 = 81, 3 ** 5 = 243
 *  4 ** 2 = 16, 4 ** 3 = 64, 4 ** 4 = 256, 4 ** 5 = 1024
 *  5 ** 2 = 25, 5 ** 3 = 125, 5 ** 4 = 625, 5 ** 5 = 3125
 * 
 *  If they are then placed in numerical order, with any repeats removed, we get the following sequence of 15 distinct terms:
 *  4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125
 *  How many distinct terms are in the sequence generated by a ** b for 2 ≤ a ≤ 100 and 2 ≤ b ≤ 100?
 */
//var BigNumber = require('bignumber.js');
//var Decimal = require('decimal.js');
//var fs = require('fs');

function solution(a, b){
    const isPower = (n) => {
        let arr = [];
        let f = Math.floor(Math.sqrt(n));
        for (let i = 2; i < 100 && i <= f; i++){
            if (n % i == 0){
                let g = Math.log(n)/Math.log(i);
                if (Math.abs(g - Math.floor(g)) <= 0.0000000001){
                    arr.push(Math.floor(g));
                }
            }
        }

        return arr;
    };

    let count = (a - 1) * (b - 1);

    for (let i = 2; i <= a; i++){
        let g = isPower(i);
        if (g.length){
            for (let j in g){
                let h = Math.floor((b)/(g[j]));
                let f = h - 1;
                if (h == b/g[j] && g[j] & 1) f--;
                count -= f;
            }
        }
    }

    return count;
}
//INPUT GOES HERE
let q = [100, 100];

//TIME STUFF
let times = [];
let solutions = [];
for (let i = 0; i < 5; i++){
    let hrStart = process.hrtime();
    let g = solution(...q);
    let hrEnd = process.hrtime(hrStart);
    times.push(hrEnd);
    solutions.push(g);
}
let tot = [0, 0];
for (let i in times){
    tot[0] += times[i][0];
    tot[1] += times[i][1];
}
tot[0] /= 5;
tot[1] /= 5;
let g = solutions[0];

console.log(`Answer: ${g} Execution Time: ${tot[0]}s, ${tot[1]/1000000}ms`);

/**
 *      SUBMITTED ON        2018/11/27
 *                          CORRECT*
 *      VALUE:              9183
 *      RUNTIME:            0.193ms
 */

 //NOTE: I have no idea why this is correct. Theory is wrong, still somehow pops out the right answer. What the fuck.